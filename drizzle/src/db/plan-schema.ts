/**
 * plans
 * A plan is a higher-level "Plan" generated by the agent (e.g., "Plan my Saturday")
 * It groups multiple plan_blocks and can be saved as a template/schedule.
 */

import { pgTable, uuid, varchar, text, jsonb, timestamp, boolean, integer } from "drizzle-orm/pg-core";
import { sql } from "drizzle-orm";
import { user } from "./auth-schema";
import { task } from "./task-schema";

export const plans = pgTable("plans", {
    id: uuid("id").primaryKey().default(sql`gen_random_uuid()`),
    user_id: uuid("user_id").references(() => user.id, { onDelete: "cascade" }).notNull(),
    title: varchar("title", { length: 256 }).notNull(),
    description: text("description"),
    // JSON metadata: source_utterance, model_version, score, tags
    metadata: jsonb("metadata").default(sql`'{}'::jsonb`),
    created_at: timestamp("created_at").defaultNow().notNull(),
    updated_at: timestamp("updated_at").defaultNow().notNull(),
    is_template: boolean("is_template").default(false),
});

/**
 * plan_blocks
 * Time blocks inside a plan. Each block may map to a task (optional)
 * Example: Gym 8:00-9:00, Brunch 10:30-11:30.
 */
export const planBlocks = pgTable("plan_blocks", {
    id: uuid("id").primaryKey().default(sql`gen_random_uuid()`),
    plan_id: uuid("plan_id").references(() => plans.id, { onDelete: "cascade" }).notNull(),
    task_id: uuid("task_id").references(() => task.id, { onDelete: "set null" }),
    title: varchar("title", { length: 256 }).notNull(),
    notes: text("notes"),
    // block start / end in UTC (store timezone separately if needed)
    start_ts: timestamp("start_ts").notNull(),
    end_ts: timestamp("end_ts").notNull(),
    location: varchar("location", { length: 512 }), // text label for UI
    // status for block level (not task)
    completed: boolean("completed").default(false),
    order_index: integer("order_index").default(0), // ordering within plan
    created_at: timestamp("created_at").defaultNow().notNull(),
});

